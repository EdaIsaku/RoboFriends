{"version":3,"sources":["Components/SearchBox/SearchBox.js","Components/Card/Card.js","Components/Cards/Cards.js","Components/Scroll/Scroll.js","Components/ErrorBoundry/ErrorBoundry.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBox","searchChange","className","type","placeholder","onChange","Card","id","name","email","alt","src","Cards","robots","map","robot","Scroll","props","style","overflowY","height","border","children","ErrorBoundry","state","hasErrors","error","info","this","setState","Component","App","onSearchBoxChange","ev","searchBox","target","value","fetch","then","res","json","users","filteredRobots","filter","el","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAeeA,EAbG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACnB,OACE,qBAAKC,UAAU,MAAf,SACE,uBACEA,UAAU,6CACVC,KAAK,SACLC,YAAY,gBACZC,SAAUJ,OCIHK,G,MAVF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACxB,OACE,sBAAKP,UAAU,sDAAf,UACE,qBAAKQ,IAAI,QAAQC,IAAG,+BAA0BJ,EAA1B,uBACpB,6BAAKC,IACL,4BAAIC,SCgBKG,EArBD,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAKf,OACE,8BACGA,EAAOC,KAAI,SAACC,GACX,OACE,cAAC,EAAD,CAEER,GAAIQ,EAAMR,GACVC,KAAMO,EAAMP,KACZC,MAAOM,EAAMN,OAHRM,EAAMR,UCGRS,EAdA,SAACC,GACd,OACE,qBACEC,MAAO,CACLC,UAAW,SACXC,OAAQ,QACRC,OAAQ,mBAJZ,SAOGJ,EAAMK,YCaEC,E,kDArBb,WAAYN,GAAQ,IAAD,8BACjB,cAAMA,IACDO,MAAQ,CACXC,WAAW,GAHI,E,qDAMnB,SAAkBC,EAAOC,GACvBC,KAAKC,SAAS,CACZJ,WAAW,M,oBAIf,WAEE,OADsBG,KAAKJ,MAAnBC,UAEC,+EAEFG,KAAKX,MAAMK,a,GAlBKQ,aCkDZC,G,wDA5Cb,aAAe,IAAD,8BACZ,gBAeFC,kBAAoB,SAACC,GACnB,EAAKJ,SAAS,CACZK,UAAWD,EAAGE,OAAOC,SAhBvB,EAAKZ,MAAQ,CACXX,OAAQ,GACRqB,UAAW,IAJD,E,qDAQd,WAAqB,IAAD,OAClBG,MAAM,8CACHC,MAAK,SAACC,GACL,OAAOA,EAAIC,UAEZF,MAAK,SAACG,GAAD,OAAW,EAAKZ,SAAS,CAAEhB,OAAQ4B,S,oBAS7C,WACE,MAA8Bb,KAAKJ,MAA3BX,EAAR,EAAQA,OAAQqB,EAAhB,EAAgBA,UACVQ,EAAiB7B,EAAO8B,QAAO,SAACC,GACpC,OAAOA,EAAGpC,KAAKqC,cAAcC,SAASZ,EAAUW,kBAGlD,OAAyB,IAAlBhC,EAAOkC,OACZ,oBAAI7C,UAAU,KAAd,qBAEA,sBAAKA,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWD,aAAc2B,KAAKI,oBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAOnB,OAAQ6B,e,GArCTZ,cCKHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.49feed5c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n  return (\r\n    <div className=\"pa2\">\r\n      <input\r\n        className=\"pa3 ba b--green bg-lightest-blue outline-0\"\r\n        type=\"search\"\r\n        placeholder=\"Search robots\"\r\n        onChange={searchChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\nimport \"tachyons\";\r\n\r\nconst Card = ({ id, name, email }) => {\r\n  return (\r\n    <div className=\"grow tc bg-light-green dib pa3 ma2 br3 shadow-hover\">\r\n      <img alt=\"robot\" src={`https://robohash.org/${id}.png?size=200x200`} />\r\n      <h2>{name}</h2>\r\n      <p>{email}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"../Card/Card\";\r\n\r\nconst Cards = ({ robots }) => {\r\n  //it shows an error to the user because of the Error Boundry\r\n  // if (true) {\r\n  //   throw new Error(\"ooh no\");\r\n  // }\r\n  return (\r\n    <div>\r\n      {robots.map((robot) => {\r\n        return (\r\n          <Card\r\n            key={robot.id}\r\n            id={robot.id}\r\n            name={robot.name}\r\n            email={robot.email}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import React from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        overflowY: \"scroll\",\r\n        height: \"600px\",\r\n        border: \"2px solid black\",\r\n      }}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scroll;\r\n","import React, { Component } from \"react\";\r\n\r\nclass ErrorBoundry extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasErrors: false,\r\n    };\r\n  }\r\n  componentDidCatch(error, info) {\r\n    this.setState({\r\n      hasErrors: true,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { hasErrors } = this.state;\r\n    if (hasErrors) {\r\n      return <h1>Something went wrong. Please wait a second...</h1>;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundry;\r\n","import React, { Component } from \"react\";\r\nimport SearchBox from \"./Components/SearchBox/SearchBox\";\r\nimport Cards from \"./Components/Cards/Cards\";\r\nimport Scroll from \"./Components/Scroll/Scroll\";\r\nimport ErrorBoundry from \"./Components/ErrorBoundry/ErrorBoundry\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      robots: [],\r\n      searchBox: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((users) => this.setState({ robots: users }));\r\n  }\r\n\r\n  onSearchBoxChange = (ev) => {\r\n    this.setState({\r\n      searchBox: ev.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { robots, searchBox } = this.state;\r\n    const filteredRobots = robots.filter((el) => {\r\n      return el.name.toLowerCase().includes(searchBox.toLowerCase());\r\n    });\r\n\r\n    return robots.length === 0 ? (\r\n      <h1 className=\"tc\">Loading</h1>\r\n    ) : (\r\n      <div className=\"tc\">\r\n        <h1 className=\"f1\">RoboFriends</h1>\r\n        <SearchBox searchChange={this.onSearchBoxChange} />\r\n        <Scroll>\r\n          <ErrorBoundry>\r\n            <Cards robots={filteredRobots} />\r\n          </ErrorBoundry>\r\n        </Scroll>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}